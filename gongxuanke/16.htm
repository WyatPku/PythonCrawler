<html lang="zh"><head>
<title>课程详细信息</title>
<meta charset="utf-8"><link href="style.css" rel="stylesheet" type="text/css">
</head>
<body style="padding:0px 0px 0px 0px;margin:0px 0px 0px 0px;font:微软雅黑 ,tahoma,arial,verdana,sans-serif;">
	<table align="center" width="1000" border="0" cellspacing="3px">
	<tbody><tr>
			<td></td>
	</tr>
	
	   
	   
		<tr>
			<td>
			<p style="color: #39961D;font-size: 16px;font-weight: bold;text-align:center">高级计算机图形学课程详细信息</p>
			</td>
		</tr>
		<tr>
			<td>
			<table class="pkuportal-table-portlet" width="100%">
				<tbody><tr>
					<th class="pkuportal-td-title" width="25%">课程号</th>
					<td width="25%"><span>04833330</span></td>
					<th class="pkuportal-td-title" width="25%">学分</th>
					<td width="25%"><span>2</span></td>
				</tr>
				<tr>
					<th class="pkuportal-td-title">英文名称</th>
					<td colspan="3"><span>Computer Graphics and Advanced Topics </span></td>
				</tr>
				<tr>
					<th class="pkuportal-td-title" width="10%">先修课程</th>
					<td colspan="9"><span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></td>
				</tr>
				<tr>
					<th class="pkuportal-td-title" width="10%">中文简介</th>
					<td colspan="9"><span>本课程涵盖计算机图形学和高级概念的基本原理及其在突出应用中的应用。课程的教学目的是：<br>- 给学生很好的了解计算机图形学的基本概念;介绍计算机生成图像，阴影和光近似的数学原理的基本原理;并说明了不同的几何表示和建模技术。<br>- 教授并使学生能够在OpenGL GLSL语言中开发定制的图形管道技能;使学生能够为小型应用程序问题开发自定义着色解决方案。<br>- 帮助学生掌握可编程图形管道的良好理解和使用能力;熟悉共同图形原语和相关操作。<br>- 教授计算机图形问题的各种设计和实现解决方案;说明不同实施选择的实际效果;并说明了它们在开发用于实际应用问题的着色器管线时的实际用途。<br></span></td>
				</tr>
				<tr>
					<th class="pkuportal-td-title" width="10%">英文简介</th>
					<td colspan="9"><span>This course covers the fundamental principles of computer graphics and advanced concepts and their use in prominent applications. <br>The aims of this module are: <br>-	To give students a good understanding of basic concepts of computer graphics; introduce them to the fundamental principles of the mathematical principles used for computer generated imagery, shading and light approximations; and illustrate different geometry representation and modelling technique. <br>-	To teach and enable students to develop customised graphics pipelines skills within the OpenGL GLSL language; to enable students to develop custom shading solutions to small application problems. <br>-	To help students gain a good understanding of, and ability to use, programmable graphics pipelines; familiarise students with common graphics primitives and associated operations. <br>-	To teach various design and implementation solutions for computer graphics problems; illustrate the practical effects of the different implementation choices; and illustrate their practical use in developing shader pipelines for real application problems.<br></span></td>
				</tr>
				<tr>
					<th class="pkuportal-td-title" width="10%">开课院系</th>
					<td colspan="9"><span>信息科学技术学院</span></td>
				</tr>
				<tr>
					<th class="pkuportal-td-title" width="10%">通选课领域</th>
					<td colspan="9"><span>&nbsp;</span></td>
				</tr>
				<tr>
					<th class="pkuportal-td-title" width="10%">是否属于艺术与美育</th>
					<td colspan="9"><span>否</span></td>
				</tr>
				<tr>
					<th class="pkuportal-td-title" width="10%">平台课性质</th>
					<td colspan="9"><span>&nbsp;</span></td>
				</tr>
				<tr>
					<th class="pkuportal-td-title" width="10%">平台课类型</th>
					<td colspan="9"><span>&nbsp;</span></td>
				</tr>
				<tr>
					<th class="pkuportal-td-title" width="10%">授课语言</th>
					<td colspan="9"><span>英文</span></td>
				</tr>
				<tr>
					<th class="pkuportal-td-title" width="10%">教材</th>
					<td colspan="9"><span>-	3D COMPUTER GRAPHICS: Watt, Alan H. 3rd, Addison Wesley；
<br>-	INTERACTIVE COMPUTER GRAPHICS A TOP-DOWN APPROACH WITH SHADER-BASED OPENGL: Angel, Edward, 6th, Pearson,-	OPENGL PROGRAMMING GUIDE: Shreiner, Dave 8th, Addison Wesley. Free online version: https://www.ics.uci.edu/~gopi/CS211B/opengl_programming_guide_8th_edition.pdf,-	REAL-TIME RENDERING: Mo？ller, Tomas, 1971-2nd ed., Natick, Mass. : AK Peters,-	3-D COMPUTER GRAPHICS : A MATHEMATICAL INTRODUCTION WITH OPENGL, Buss, Samuel R., Cambridge : Cambridge University Press,</span></td>
				</tr>
				<tr>
					<th class="pkuportal-td-title" width="10%">参考书</th>
					<td colspan="9"><span></span></td>
				</tr>
				<tr>
					<th class="pkuportal-td-title" width="10%">教学大纲</th>
					<td colspan="9"><span>The lectures include: <br>Device independent graphics: Raster and vector devices, world coordinates, the normalisation transformation, output primitives, input primitives. Polygon rendering: 3D data base representation, projection onto a viewing surface, transformation of graphical scenes, homogenous co-ordinates, affine transformations for animation.<br>3D geometry: clipping and containment in 3D convex objects, splitting concave objects. Texture mapping and anti-aliasing.<br>Shading planar polygons: Gouraud shading, Phong shading. Representing Colours: tri-stimulus model, RGB model, CIE definition space, perceptual colour spaces.<br>Ray Tracing: Ray/object intersection calculations, secondary rays, shadows, reflection and refraction, object space coherence, ray space coherence.<br>Special Effects: Impostors, particle effects, vector field sampling and integration methods.<br>Animation and Kinematics: cel animation, articulated models, quaternion interpolation, forward and inverse kinematics, fiducial marker tracking. <br>Radiosity: Modeling ambient light, form factors, specular effects, shooting patches, computational efficiency. Geometric Warping and Morphing. Special Visual Effects: particle systems for fire smoke and water, inverse kinematics in animation, non-photorealistic rendering.<br><br>Learning Outcomes:<br>1) Knowledge and Understanding upon successful completion of the module, a student will: Understand basic principles of computer generated imagery. Understand the basic and some advanced issues related to customising programmable shading pipelines - such as vertex, fragment, and geometry shading stages. Understand the basic ideas behind surface geometry representation, 3D geometry, polyhedral rendering and rat-based image generation methods. Differentiate specifications of abstract concepts from particular implementation techniques. Learn about fundamental algorithms associated with computer graphics.<br>2) Intellectual and Practical skills upon successful completion of the module, a student will: Be able to solve a given computer graphics problem by going through the basic steps of rendering pipeline specification, algorithm selection, analysis and implementation. Be able to competently read `foreign` OpenGL GLSL source code and computer graphics pipeline diagrams. Have developed solid understanding of the mathematical principles of computer graphics and the ability to put in practice the acquired knowledge and understanding in relatively simple case studies. <br>Transferable Skills:<br>To assemble a visual presentation on a complex scientific topic and to explain it orally.<br>To relate conceptual problems to technological prototype applications and vice versa.<br><br>Classes:<br>？	Projections and Transformations: 2	<br>？	Transformations for Animation: 1	<br>？	Clipping: 2<br>？	Graphics Pipeline and APIs: 1 &nbsp;<br>？	Illumination, Shading: 2<br>？	Graphics APIs and Shading languages: 1 &nbsp;<br>？	Illumination project presentations: 3<br>？	Colour: 2 <br>？	Texture Mapping: 1 <br>？	Rasterization, Visibility &amp; Anti-aliasing: 1 <br>？	Ray tracing: 2	<br>？	Ray tracing project presentations: 3<br>？	Spline curves: 2			<br>？	Spline surfaces: 1 <br>？	Warping and Morphing: 1<br>？	Special effects: 1<br>？	Animation and Kinematics: 2	<br>？	Radiosity: 2<br>？	Revision: 2
<br>A modern teaching framework (https://github.com/bkainz/ShaderLabFramework), based on OpenGL 4 and GLSL, will be used to solidify selected concepts from the lectures.<br><br>Total: 32 units
<br>Test 20%, project 30%, final exam 50%

<br></span></td>
				</tr>
			</tbody></table>
			</td>
		</tr>
		
		
	</tbody></table>




</body></html>